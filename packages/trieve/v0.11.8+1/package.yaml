# yaml-language-server: $schema=https://glasskube.dev/schemas/v1/package-manifest.json

# todo:
# - deployment database secret refs (database & qdrant)
# - clickhouse manually patched
# - KeyCloak (

name: trieve
shortDescription: Infrastructure for search, recommendations, RAG, and analytics
longDescription: |
  Trieve is all-in-one infrastructure for building hybrid vector search, recommendations,
  RAG, and analytics offered via API.

  **Make sure to read Glasskube trieve getting started guide:**
  [https://github.com/devflowinc/trieve/tree/main/glasskube](https://github.com/devflowinc/trieve/tree/main/glasskube)

  If you run trieve in CPU mode you should follow the instructions in the getting started guide.
scope: Namespaced
defaultNamespace: default
iconUrl: https://avatars.githubusercontent.com/u/122049913
manifests:
  - url: ./trieve.yaml
components:
  - name: keycloak-operator
    installedName: trieve-keycloak
  - name: qdrant
    installedName: trieve-qdrant
    version: 1.11.4
    values:
      instances:
        value: '1'
      memory:
        value: "600Mi"
  - name: redis
    installedName: trieve-redis
    version: 7.4.0
    values:
      memory:
        value: "100Mi"
  - name: tika
    installedName: trieve-tika
    version: 2.9.2
  - name: postgresql
    installedName: trieve-keycloak-db
    version: 16.4.0+2
    values:
      enableSuperuserAccess:
        value: "false"
      databaseName:
        value: "keycloak"
      storageSize:
        value: "10Gi"
      instances:
        value: "2"
      memory:
        value: 256Mi
  - name: postgresql
    installedName: trieve-db
    version: 16.4.0+2
    values:
      enableSuperuserAccess:
        value: "false"
      databaseName:
        value: "trieve"
      storageSize:
        value: "10Gi"
      instances:
        value: "2"
      memory:
        value: 256Mi
dependencies:
  - name: clickhouse-operator
  - name: cloudnative-pg
    version: 1.23.x
valueDefinitions:
  domain:
    type: text
    metadata:
      label: Domain
      description: |
        Base DNS name for the Trieve Ingress, without subdomains
    constraints:
      pattern: ^([a-z0-9]([\-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([\-a-z0-9]*[a-z0-9])?)*)?$
      required: true
    targets:
      - patch:
          op: add
          path: /data/BASE_SERVER_URL
        valueTemplate: |
          "http://api.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
      - patch:
          op: add
          path: /data/VITE_API_HOST
        valueTemplate: |
          "http://api.{{ . }}/api"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-config
      - patch:
          op: add
          path: /data/VITE_SEARCH_UI_URL
        valueTemplate: |
          "http://search.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-config
      - patch:
          op: add
          path: /data/VITE_DASHBOARD_URL
        valueTemplate: |
          "http://dashboard.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-config
      - patch:
          op: add
          path: /data/VITE_CHAT_UI_URL
        valueTemplate: |
          "http://chat.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-config
      - patch:
          op: add
          path: /data/VITE_ANALYTICS_UI_URL
        valueTemplate: |
          "http://analytics.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-config
      - patch:
          op: add
          path: /data/VITE_DASHBOARD_URL
        valueTemplate: |
          "http://dashboard.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-dashboard-config
      - patch:
          op: add
          path: /data/VITE_DASHBOARD_URL
        valueTemplate: |
          "http://search.{{ . }}"
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-ui-search-config
      - patch:
          op: add
          path: /spec/rules/0/host
        valueTemplate: |
          "dashboard.{{ . }}"
        resource:
          apiGroup: networking.k8s.io/v1
          kind: Ingress
          name: trieve-ui-dashboard
      - patch:
          op: add
          path: /spec/rules/0/host
        valueTemplate: |
          "search.{{ . }}"
        resource:
          apiGroup: networking.k8s.io/v1
          kind: Ingress
          name: trieve-ui-search
      - patch:
          op: add
          path: /spec/rules/0/host
        valueTemplate: |
          "analytics.{{ . }}"
        resource:
          apiGroup: networking.k8s.io/v1
          kind: Ingress
          name: trieve-ui-analytics
      - patch:
          op: add
          path: /spec/rules/0/host
        valueTemplate: |
          "chat.{{ . }}"
        resource:
          apiGroup: networking.k8s.io/v1
          kind: Ingress
          name: trieve-ui-chat
      - patch:
          op: add
          path: /spec/rules/0/host
        valueTemplate: |
          "api.{{ . }}"
        resource:
          apiGroup: networking.k8s.io/v1
          kind: Ingress
          name: trieve-server
      - patch:
          op: add
          path: /spec/rules/0/host
        valueTemplate: |
          "auth.{{ . }}"
        resource:
          apiGroup: networking.k8s.io/v1
          kind: Ingress
          name: trieve-keycloak
      - patch:
          op: replace
          path: /data/OIDC_AUTH_REDIRECT_URL
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://auth.{{ . }}/realms/trieve/protocol/openid-connect/auth"'
      - patch:
          op: replace
          path: /data/OIDC_ISSUER_URL
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://auth.{{ . }}/realms/trieve"'
      - patch:
          op: replace
          path: /spec/hostname/hostname
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-keycloak
          kind: Keycloak
        valueTemplate: '"http://auth.{{ . }}"'
        # keycloak madness starts here
      - patch:
          op: add
          path: /spec/realm/clients/6/redirectUris/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://api.{{ . }}/*"'
      - patch:
          op: add
          path: /spec/realm/clients/6/redirectUris/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://dashboard.{{ . }}/*"'
      - patch:
          op: add
          path: /spec/realm/clients/6/redirectUris/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://chat.{{ . }}/*"'
      - patch:
          op: add
          path: /spec/realm/clients/6/redirectUris/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://search.{{ . }}/*"'
      - patch:
          op: add
          path: /spec/realm/clients/6/redirectUris/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://analytics.{{ . }}/*"'
      - patch:
          op: add
          path: /spec/realm/clients/6/webOrigins/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://api.{{ . }}"'
      - patch:
          op: add
          path: /spec/realm/clients/6/webOrigins/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://dashboard.{{ . }}"'
      - patch:
          op: add
          path: /spec/realm/clients/6/webOrigins/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://chat.{{ . }}"'
      - patch:
          op: add
          path: /spec/realm/clients/6/webOrigins/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://search.{{ . }}"'
      - patch:
          op: add
          path: /spec/realm/clients/6/webOrigins/-
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"http://analytics.{{ . }}"'
  cpuMode:
    type: boolean
    defaultValue: "true"
    metadata:
      label: CPU Mode
      description: >
        You can configure trieve to only do semantic search by only using bgem3 embedding server.
    targets:
      - patch:
          op: replace
          path: /spec/replicas
        valueTemplate: |
          {{ if eq . "true" }}0{{ else }}1{{ end }}
        resource:
          apiGroup: apps/v1
          kind: Deployment
          name: trieve-embedding-bgem3
      - patch:
          op: replace
          path: /spec/replicas
        valueTemplate: |
          {{ if eq . "true" }}0{{ else }}1{{ end }}
        resource:
          apiGroup: apps/v1
          kind: Deployment
          name: trieve-embedding-jina
      - patch:
          op: replace
          path: /spec/replicas
        valueTemplate: |
          {{ if eq . "true" }}0{{ else }}1{{ end }}
        resource:
          apiGroup: apps/v1
          kind: Deployment
          name: trieve-embedding-reranker
      - patch:
          op: replace
          path: /spec/replicas
        valueTemplate: |
          {{ if eq . "true" }}0{{ else }}1{{ end }}
        resource:
          apiGroup: apps/v1
          kind: Deployment
          name: trieve-embedding-splade-doc
      - patch:
          op: replace
          path: /spec/replicas
        valueTemplate: |
          {{ if eq . "true" }}0{{ else }}1{{ end }}
        resource:
          apiGroup: apps/v1
          kind: Deployment
          name: trieve-embedding-splade-doc
  keyForAnthropicApi:
    type: text
    defaultValue: " "
    metadata:
      label: Anthropic API Key (optional)
      description: >
        Anthropic API key for accessing anthropic hosted models via trieve.
    targets:
      - patch:
          op: replace
          path: /data/ANTHROPIC_API_KEY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  keyForJinaCodeApi:
    type: text
    defaultValue: " "
    metadata:
      label: Jina AI API key (optional)
      description: >
        Jina Code Api key for accessing jina.ai hosted models via trieve.
    targets:
      - patch:
          op: replace
          path: /data/JINA_CODE_API_KEY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  keyForLlmApi:
    type: text
    defaultValue: " "
    metadata:
      label: LLM API Key (optional)
      description: >
        LLM API key for accessing third party LLMS.
    targets:
      - patch:
          op: replace
          path: /data/LLM_API_KEY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  keyForOpenaiApi:
    type: text
    defaultValue: " "
    metadata:
      label: Open AI API Key (optional)
      description: >
        Open AI API Key.
    targets:
      - patch:
          op: replace
          path: /data/OPENAI_API_KEY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  s3AccessKey:
    defaultValue: ""
    type: text
    metadata:
      label: S3 Access Key
      description: >
        S3 credentials for uploading data custom data to Trieve
    targets:
      - patch:
          op: replace
          path: /data/S3_ACCESS_KEY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  s3SecretKey:
    type: text
    defaultValue: ""
    metadata:
      label: S3 Secret Key
      description: >
        S3 credentials for uploading data custom data to Trieve
    targets:
      - patch:
          op: replace
          path: /data/S3_SECRET_KEY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  s3Endpoint:
    type: text
    defaultValue: ""
    metadata:
      label: S3 Endpoint
      description: >
        For AWS, please use `https://s3.${AWS_REGION}.amazonaws.com`
    targets:
      - patch:
          op: replace
          path: /data/S3_ENDPOINT
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  s3BucketName:
    type: text
    defaultValue: ""
    metadata:
      label: S3 Bucket Name
    targets:
      - patch:
          op: replace
          path: /data/S3_BUCKET
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  s3AwsRegion:
    type: text
    defaultValue: ""
    metadata:
      label: S3 AWS Region
    targets:
      - patch:
          op: add
          path: /data/AWS_REGION
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  smtpEmailAddress:
    type: text
    defaultValue: " "
    metadata:
      label: SMTP email address
      description: >
        SMTP settings for sending out emails via trieve.
    targets:
      - patch:
          op: replace
          path: /data/SMTP_EMAIL_ADDRESS
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  smtpServerUrl:
    type: text
    defaultValue: " "
    metadata:
      label: SMTP Server Url
      description: >
        SMTP settings for sending out emails via trieve.
    targets:
      - patch:
          op: replace
          path: /data/SMTP_RELAY
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  smtpUsername:
    type: text
    defaultValue: " "
    metadata:
      label: SMTP username
      description: >
        SMTP settings for sending out emails via trieve.
    targets:
      - patch:
          op: replace
          path: /data/SMTP_USERNAME
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
  smtpUsernamePassword:
    type: text
    defaultValue: " "
    metadata:
      label: SMTP password
      description: >
        SMTP settings for sending out emails via trieve.
    targets:
      - patch:
          op: replace
          path: /data/SMTP_PASSWORD
        resource:
          apiGroup: v1
          kind: ConfigMap
          name: trieve-server-config
references:
  - label: Website
    url: https://trieve.ai/
  - label: Documentation
    url: https://docs.trieve.ai/
  - label: GitHub
    url: https://github.com/devflowinc/trieve
transitiveResources:
  - apiGroup: v1
    kind: Secret
    name: trieve-keycloak-db-cluster-app
  - apiGroup: v1
    kind: Secret
    name: trieve-keycloak-db-cluster-rw
  - apiGroup: v1
    kind: Secret
    name: trieve-db-cluster-app
  - apiGroup: v1
    kind: Secret
    name: trieve-qdrant-qdrant-apikey
  - apiGroup: v1
    kind: Service
    name: trieve-keycloak-service
transformations:
  - source:
      path: "{ $.metadata.name }"
    targets:
      - patch:
          op: replace
          path: /spec/db/host
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-keycloak
          kind: Keycloak
        valueTemplate: '"{{ . }}-trieve-keycloak-db-cluster-rw"'
      - patch:
          op: replace
          path: /spec/db/passwordSecret/name
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-keycloak
          kind: Keycloak
        valueTemplate: '"{{ . }}-trieve-keycloak-db-cluster-app"'
      - patch:
          op: replace
          path: /spec/db/usernameSecret/name
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-keycloak
          kind: Keycloak
        valueTemplate: '"{{ . }}-trieve-keycloak-db-cluster-app"'
      - patch:
          op: replace
          path: /spec/keycloakCRName
        resource:
          apiGroup: k8s.keycloak.org/v2alpha1
          name: trieve-realm
          kind: KeycloakRealmImport
        valueTemplate: '"{{ . }}-trieve-keycloak"'
      - patch:
          op: replace
          path: /data/CLICKHOUSE_DSN
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"clickhouse://default:password@clickhouse-{{ . }}-trieve-clickhouse:8123/default"'
      - patch:
          op: replace
          path: /data/CLICKHOUSE_URL
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://clickhouse-{{ . }}-trieve-clickhouse:8123"'
      - patch:
          op: replace
          path: /data/EMBEDDING_SERVER_ORIGIN
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://{{ . }}-trieve-embedding-bgem3"'
      - patch:
          op: replace
          path: /data/EMBEDDING_SERVER_ORIGIN_BGEM3
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://{{ . }}-trieve-embedding-bgem3"'
      - patch:
          op: replace
          path: /data/EMBEDDING_SERVER_ORIGIN_JINA_CODE
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://{{ . }}-trieve-embedding-jina"'
      - patch:
          op: replace
          path: /data/QDRANT_URL
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"http://{{ . }}-trieve-qdrant-qdrant:6334"'
      - patch:
          op: replace
          path: /data/REDIS_URL
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"redis://{{ . }}-trieve-redis-redis:6379"'
      - patch:
          op: replace
          path: /data/RERANKER_SERVER_ORIGIN
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"redis://{{ . }}-trieve-embedding-reranker"'
      - patch:
          op: replace
          path: /data/SPARSE_SERVER_DOC_ORIGIN
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"redis://{{ . }}-trieve-embedding-splade-doc"'
      - patch:
          op: replace
          path: /data/SPARSE_SERVER_QUERY_ORIGIN
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"redis://{{ . }}-trieve-embedding-splade-doc"'
      - patch:
          op: replace
          path: /data/TIKA_URL
        resource:
          apiGroup: v1
          name: trieve-server-config
          kind: ConfigMap
        valueTemplate: '"redis://{{ . }}-trieve-tika-tika"'
      - patch:
          op: replace
          path: /spec/templates/podTemplates/0/spec/volumes/0/configMap/name
        resource:
          apiGroup: clickhouse.altinity.com/v1
          name: trieve-clickhouse
          kind: ClickHouseInstallation
        valueTemplate: '"{{ . }}-trieve-clickhouse-scripts"'
      - patch:
          op: replace
          path: /spec/templates/podTemplates/0/spec/volumes/1/configMap/name
        resource:
          apiGroup: clickhouse.altinity.com/v1
          name: trieve-clickhouse
          kind: ClickHouseInstallation
        valueTemplate: '"{{ . }}-trieve-clickhouse-functions"'
